<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.namoo.social.dao.sqlmap.mapper.MessageMapper">
    
    <resultMap type="Message" id="result-message">
    	<id property="msgNo" column="msg_no" javaType="int"/>
    	<result property="contents" column="contents" javaType="string"/>
    	<result property="writer.userId" column="writer" javaType="string"/>
    	<result property="regDate" column="reg_dt" javaType="date"/>
    </resultMap>
    
    <select id="selectAllMessagesByUserId" parameterType="map" resultMap="result-message">
    	SELECT
	    	msg_no,
	    	contents,
	    	writer,
	    	reg_dt
    	FROM message_tb
    	WHERE writer = #{userId}
    	ORDER BY msg_no DESC
    	LIMIT #{pageCondition.startIndex},
    	#{pageCondition.countPerPage}
    </select>
    
    <select id="selectAllMessagesByUserIdCount" parameterType="string" resultType="int">
    	SELECT
    		count(msg_no) AS count
    	FROM message_tb
    	WHERE writer = #{userId}
    </select>
    
    <select id="selectTimeline" parameterType="map" resultMap="result-message">
    	SELECT
    		msg_no,
    		contents,
    		writer,
    		reg_dt
    	FROM message_tb
    	WHERE writer IN
    		(SELECT whom 
    		FROM usertouser_tb 
    		WHERE who = #{userId}) 
    		OR writer = #{userId}
    	GROUP BY msg_no
    	ORDER BY msg_no DESC
    	LIMIT #{pageCondition.startIndex},
    	#{pageCondition.countPerPage}
    </select>
    
    <select id="selectTimelineCount" parameterType="string" resultType="int">
    	SELECT
    		count(distinct msg_no) AS count
    	FROM message_tb
    	WHERE writer IN
    		(SELECT whom
    		FROM usertouser_tb
    		WHERE who = #{userId})
    		OR writer = #{userId}
    </select>
    
    <select id="selectAllMessagesFromFollowings" parameterType="map" resultMap="result-message">
    	SELECT
    		a.msg_no,
    		a.contents,
    		a.writer,
    		a.reg_dt
    	FROM message_tb a
    	INNER JOIN usertouser_tb b
    	ON a.writer = b.whom
    	INNER JOIN user_tb c
    	ON b.who = c.userid
    	WHERE userid = #{userId}
    	ORDER BY a.msg_no DESC
    	LIMIT #{pageCondition.startIndex},
    	#{pageCondition.countPerPage}
    </select>
    
    <select id="selectAllMessagesFromFollowingsCount" parameterType="string" resultType="int">
    	SELECT
    		count(msg_no) AS count
    	FROM message_tb a
    	INNER JOIN usertouser_tb b
    	ON a.writer = b.whom
    	INNER JOIN user_tb c
    	ON b.who = c.userid
    	WHERE userid = #{userId}
    </select>

    <select id="selectAllMessagesFromFollowers" parameterType="map" resultMap="result-message">
    	SELECT
    		a.msg_no,
    		a.contents,
    		a.writer,
    		a.reg_dt
    	FROM message_tb a
    	INNER JOIN usertouser_tb b
    	ON a.writer = b.who
    	INNER JOIN user_tb c
    	ON b.whom = c.userid
    	WHERE userid = #{userId}
    	ORDER BY a.msg_no DESC
    	LIMIT #{pageCondition.startIndex},
    	#{pageCondition.countPerPage}
    </select>
    
    <select id="selectAllMessagesFromFollowersCount" parameterType="string" resultType="int">
    	SELECT
    		count(msg_no) AS count
    	FROM message_tb a
    	INNER JOIN usertouser_tb b
    	ON a.writer = b.who
    	INNER JOIN user_tb c
    	ON b.whom = c.userid
    	WHERE userid = #{userId}
    </select>
    
    <select id="selectMessage" parameterType="int" resultMap="result-message">
    	SELECT
    		msg_no,
    		contents,
    		writer,
    		reg_dt
    	FROM message_tb
    	WHERE msg_no = #{msgNo}
    </select>
    

	<insert id="insertMessage" parameterType="Message" useGeneratedKeys="true" keyProperty="msgNo">
		INSERT
		INTO message_tb ( 
			contents, writer, reg_dt )
		VALUES ( 
			#{contents}, #{writer.userId}, sysdate() )
	</insert>
	
	<update id="updateMessage" parameterType="Message">
		UPDATE message_tb
		SET contents = #{contents}
		WHERE msg_no = #{msgNo}
	</update>
	
	<delete id="deleteMessage" parameterType="int">
		DELETE
		FROM message_tb
		WHERE msg_no = #{msgNo}
	</delete>

</mapper>